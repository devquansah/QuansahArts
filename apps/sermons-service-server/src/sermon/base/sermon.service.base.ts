/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Sermon as PrismaSermon } from "@prisma/client";

export class SermonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SermonCountArgs, "select">): Promise<number> {
    return this.prisma.sermon.count(args);
  }

  async sermons(args: Prisma.SermonFindManyArgs): Promise<PrismaSermon[]> {
    return this.prisma.sermon.findMany(args);
  }
  async sermon(
    args: Prisma.SermonFindUniqueArgs
  ): Promise<PrismaSermon | null> {
    return this.prisma.sermon.findUnique(args);
  }
  async createSermon(args: Prisma.SermonCreateArgs): Promise<PrismaSermon> {
    return this.prisma.sermon.create(args);
  }
  async updateSermon(args: Prisma.SermonUpdateArgs): Promise<PrismaSermon> {
    return this.prisma.sermon.update(args);
  }
  async deleteSermon(args: Prisma.SermonDeleteArgs): Promise<PrismaSermon> {
    return this.prisma.sermon.delete(args);
  }
}
