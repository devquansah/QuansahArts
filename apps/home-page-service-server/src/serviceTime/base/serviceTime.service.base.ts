/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ServiceTime as PrismaServiceTime } from "@prisma/client";

export class ServiceTimeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ServiceTimeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serviceTime.count(args);
  }

  async serviceTimes(
    args: Prisma.ServiceTimeFindManyArgs
  ): Promise<PrismaServiceTime[]> {
    return this.prisma.serviceTime.findMany(args);
  }
  async serviceTime(
    args: Prisma.ServiceTimeFindUniqueArgs
  ): Promise<PrismaServiceTime | null> {
    return this.prisma.serviceTime.findUnique(args);
  }
  async createServiceTime(
    args: Prisma.ServiceTimeCreateArgs
  ): Promise<PrismaServiceTime> {
    return this.prisma.serviceTime.create(args);
  }
  async updateServiceTime(
    args: Prisma.ServiceTimeUpdateArgs
  ): Promise<PrismaServiceTime> {
    return this.prisma.serviceTime.update(args);
  }
  async deleteServiceTime(
    args: Prisma.ServiceTimeDeleteArgs
  ): Promise<PrismaServiceTime> {
    return this.prisma.serviceTime.delete(args);
  }
}
